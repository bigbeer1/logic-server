// Code generated by goctl. DO NOT EDIT.
// Source: speech.proto

package speech

import (
	"context"
	"logic-server/common/speech/speechclient"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	PaddleSpeechReply = speechclient.PaddleSpeechReply
	PaddleSpeechReq   = speechclient.PaddleSpeechReq

	Speech interface {
		PaddleSpeech(ctx context.Context, in *PaddleSpeechReq, opts ...grpc.CallOption) (*PaddleSpeechReply, error)
	}

	defaultSpeech struct {
		cli zrpc.Client
	}
)

func NewSpeech(cli zrpc.Client) Speech {
	return &defaultSpeech{
		cli: cli,
	}
}

func (m *defaultSpeech) PaddleSpeech(ctx context.Context, in *PaddleSpeechReq, opts ...grpc.CallOption) (*PaddleSpeechReply, error) {
	client := speechclient.NewSpeechClient(m.cli.Conn())
	return client.PaddleSpeech(ctx, in, opts...)
}
